# Generated by Django 2.2.2 on 2019-06-08 14:24

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('nid', models.BigAutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=128, verbose_name='文章标题')),
                ('summary', models.CharField(max_length=255, verbose_name='文章简介')),
                ('read_count', models.IntegerField(default=0, verbose_name='阅读量')),
                ('comment_count', models.IntegerField(default=0, verbose_name='评论量')),
                ('up_count', models.IntegerField(default=0, verbose_name='点赞量')),
                ('down_count', models.IntegerField(default=0, verbose_name='被踩量')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('article_type', models.IntegerField(choices=[(1, 'Python'), (2, 'Linux'), (3, 'OpenStack'), (4, 'GoLang')], default=None, verbose_name='所属类型')),
            ],
            options={
                'verbose_name_plural': '文章表',
                'verbose_name': '文章表',
            },
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('nid', models.BigAutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=64, verbose_name='个人博客标题')),
                ('site', models.CharField(max_length=32, unique=True, verbose_name='个人博客前缀')),
                ('theme', models.CharField(max_length=32, verbose_name='博客主题')),
            ],
            options={
                'verbose_name_plural': '博客信息表',
                'verbose_name': '博客信息表',
            },
        ),
        migrations.CreateModel(
            name='UserFans',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name_plural': '互粉关系表',
                'verbose_name': '互粉关系表',
            },
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('nid', models.BigAutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=32, unique=True, verbose_name='用户名')),
                ('password', models.CharField(max_length=64, verbose_name='密码')),
                ('nickname', models.CharField(max_length=32, verbose_name='昵称')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='邮箱')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='', verbose_name='头像')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('fans', models.ManyToManyField(through='cnblog.UserFans', to='cnblog.UserInfo', verbose_name='粉丝们')),
            ],
            options={
                'verbose_name_plural': '用户表',
                'verbose_name': '用户表',
            },
        ),
        migrations.AddField(
            model_name='userfans',
            name='follower',
            field=models.ForeignKey(on_delete=True, related_name='followers', to='cnblog.UserInfo', verbose_name='粉丝'),
        ),
        migrations.AddField(
            model_name='userfans',
            name='user',
            field=models.ForeignKey(on_delete=True, related_name='users', to='cnblog.UserInfo', verbose_name='博主'),
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('nid', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=32, verbose_name='标签名称')),
                ('blog', models.ForeignKey(on_delete=True, to='cnblog.Blog', verbose_name='所属博客')),
            ],
            options={
                'verbose_name_plural': '标签表',
                'verbose_name': '标签表',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('nid', models.BigAutoField(primary_key=True, serialize=False)),
                ('content', models.CharField(max_length=255, verbose_name='评论内容')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('article', models.ForeignKey(on_delete=True, to='cnblog.Article', verbose_name='评论文章')),
                ('reply', models.ForeignKey(null=True, on_delete=True, related_name='back', to='cnblog.Comment', verbose_name='回复评论')),
                ('user', models.ForeignKey(on_delete=True, to='cnblog.UserInfo', verbose_name='评论者')),
            ],
            options={
                'verbose_name_plural': '评论表',
                'verbose_name': '评论表',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('nid', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=32, verbose_name='分类标题')),
                ('blog', models.ForeignKey(on_delete=True, to='cnblog.Blog', verbose_name='所属博客')),
            ],
            options={
                'verbose_name_plural': '博主个人文章分类表',
                'verbose_name': '博主个人文章分类表',
            },
        ),
        migrations.AddField(
            model_name='blog',
            name='user',
            field=models.OneToOneField(on_delete=True, to='cnblog.UserInfo', verbose_name='用户'),
        ),
        migrations.CreateModel(
            name='ArticleDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='文章内容')),
                ('article', models.OneToOneField(on_delete=True, to='cnblog.Article', verbose_name='所属文章')),
            ],
            options={
                'verbose_name_plural': '文章详细表',
                'verbose_name': '文章详细表',
            },
        ),
        migrations.CreateModel(
            name='Article2Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article', models.ForeignKey(on_delete=True, to='cnblog.Article', verbose_name='文章')),
                ('tag', models.ForeignKey(on_delete=True, to='cnblog.Tag', verbose_name='标签')),
            ],
            options={
                'verbose_name_plural': '文章与标签',
                'verbose_name': '文章与标签',
                'unique_together': {('article', 'tag')},
            },
        ),
        migrations.AddField(
            model_name='article',
            name='blog',
            field=models.ForeignKey(on_delete=True, to='cnblog.Blog', verbose_name='所属博客'),
        ),
        migrations.AddField(
            model_name='article',
            name='category',
            field=models.ForeignKey(null=True, on_delete=True, to='cnblog.Category', verbose_name='文章类型'),
        ),
        migrations.AddField(
            model_name='article',
            name='tags',
            field=models.ManyToManyField(through='cnblog.Article2Tag', to='cnblog.Tag'),
        ),
        migrations.AlterUniqueTogether(
            name='userfans',
            unique_together={('user', 'follower')},
        ),
        migrations.CreateModel(
            name='UpDown',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('up', models.BooleanField(verbose_name='是否赞')),
                ('article', models.ForeignKey(on_delete=True, to='cnblog.Article', verbose_name='文章')),
                ('user', models.ForeignKey(on_delete=True, to='cnblog.UserInfo', verbose_name='赞或踩用户')),
            ],
            options={
                'verbose_name_plural': '文章顶或踩表',
                'verbose_name': '文章顶或踩表',
                'unique_together': {('article', 'user')},
            },
        ),
    ]
